target C {
    platform: {
      name: "rp2040",
      board: "pololu_3pi_2040_robot"
    },
    threading: false,
  }
  
  import Motors from "lib/Motors.lf"
  import Line from "lib/Line.lf"
  import Display from "lib/Display.lf"
  
  main reactor(calibration_time: time = 10 s, sample_period: time = 100 ms) {
    motor = new Motors()
    line = new Line()
    disp = new Display()
  
    timer t(0, sample_period)
    // Timer used to display seconds.
    timer seconds(0, 1 s)
    timer end_calibration(calibration_time)
    state count: int = 0
  
    reaction(startup) -> disp.line0, disp.line1, disp.line2 {=
      lf_set(disp.line0, "CALIBRATING");
      lf_set(disp.line1, "Roll robot over");
      lf_set(disp.line2, "light and dark.");
    =}
  
    reaction(seconds) -> disp.line3 {=
      static char buf[17];
      snprintf(buf, 17, "time:%8d s", self->count++);
      lf_set(disp.line3, buf);
    =}
  
    reaction(end_calibration) -> line.calibrate {=
      lf_set(line.calibrate, false);
    =}
  
    reaction(t) -> line.trigger {=
      lf_set(line.trigger, true);
    =}
  
  
    reaction(line.reflect) -> disp.line0, disp.line1, disp.line2 {=

      if (line.reflect -> value[0] > 700 || line.reflect -> value[1] > 700) {
        lf_set(disp.line0, "Left: Avoid!");
      }
      else {
        lf_set(disp.line0, "Left: Clear");
      }
      if (line.reflect -> value[3] > 700 || line.reflect -> value[4] > 700) {
        lf_set(disp.line2, "Right: Avoid!");
      }
      else {
        lf_set(disp.line2, "Right: Clear");
      }
      if (line.reflect -> value[1] > 700 || line.reflect -> value[2] > 700 || line.reflect -> value[3] >700)  {
        lf_set(disp.line1,"Center: Avoid!");
      }
      else {
        lf_set(disp.line1, "Center: Clear");
      }
    =}
  }
  