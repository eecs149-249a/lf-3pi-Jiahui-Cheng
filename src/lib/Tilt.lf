/**
 * Library reactors for the IMU on the 
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * Note that these reactors rely on the fact that they are executed in an unthreaded
 * runtime. To adapt them for a threaded runtime, they will need to use mutual
 * exclusion to ensure that multiple instances of the reactors are not simultaneously
 * accessing the shared hardware resource.
 * 
 * @author Abhi Gundrala
 * @author Edward A. Lee
 */
 target C {
    platform: {
      name: "rp2040",
      board: "pololu_3pi_2040_robot"
    },
    threading: false,
  }
  
  preamble {=
    #include <pico/stdlib.h>
    #include <math.h>
  =}
  
  reactor Tilt {

    output pitch:float;
    output roll:float;

    input x:float;
    input y:float;
    input z:float;

    reaction(x, y, z) -> pitch, roll {=

        float x_val = x->value;
        float y_val = y->value;
        float z_val = z->value;

        float roll_val = atan2(y_val, sqrt(x_val*x_val+z_val*z_val)) * 180 / M_PI;
        float pitch_val = atan2(x_val, sqrt(y_val*y_val+z_val*z_val)) * 180 / M_PI;

        lf_set(roll, roll_val);
        lf_set(pitch, pitch_val);

    =}
  }

  
